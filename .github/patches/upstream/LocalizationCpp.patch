diff --git a/intl/l10n/Localization.cpp b/intl/l10n/Localization.cpp
index eaf21909e4..789d8db6e2 100644
--- a/intl/l10n/Localization.cpp
+++ b/intl/l10n/Localization.cpp
@@ -76,13 +76,22 @@ static nsTArray<ffi::L10nKey> ConvertFromL10nKeys(
 
     L10nMessage& m = msg->SetValue();
     if (!entry.message.value.IsVoid()) {
-      m.mValue = entry.message.value;
+      nsCString value = entry.message.value;
+      value.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
+      value.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+      m.mValue = value;
     }
     if (!entry.message.attributes.IsEmpty()) {
       auto& value = m.mAttributes.SetValue();
       if (!ConvertToAttributeNameValue(entry.message.attributes, value)) {
         return false;
       }
+      for (auto& attr : value) {
+        nsCString attrValue = attr.mValue;
+        attrValue.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
+        attrValue.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+        attr.mValue = attrValue;
+      }
     }
   }
 
@@ -287,7 +296,10 @@ already_AddRefed<Promise> Localization::FormatValue(
                                      promise->GetParentObject())) {
           promise->MaybeReject(std::move(rv));
         } else {
-          promise->MaybeResolve(aValue);
+          nsCString value = *aValue;
+          value.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
+          value.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+          promise->MaybeResolve(value);
         }
       });
 
@@ -316,7 +328,17 @@ already_AddRefed<Promise> Localization::FormatValues(
                                      promise->GetParentObject())) {
           promise->MaybeReject(std::move(rv));
         } else {
-          promise->MaybeResolve(*aValues);
+          nsTArray<nsCString> modifiedValues;
+          modifiedValues.SetCapacity(aValues->Length());
+
+          for (const auto& value : *aValues) {
+            nsCString modifiedValue = value;
+            modifiedValue.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
+            modifiedValue.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+            modifiedValues.AppendElement(modifiedValue);
+          }
+
+          promise->MaybeResolve(modifiedValues);
         }
       });
 
@@ -373,6 +395,8 @@ void Localization::FormatValueSync(const nsACString& aId,
                                                 &aRetVal, &errors);
 
   if (rv) {
+    aRetVal.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
+    aRetVal.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
     MaybeReportErrorsToGecko(errors, aRv, GetParentObject());
   } else {
     aRv.ThrowInvalidStateError(
@@ -407,6 +431,10 @@ void Localization::FormatValuesSync(
                                                  &aRetVal, &errors);
 
   if (rv) {
+    for (auto& value : aRetVal) {
+      value.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
+      value.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+    }
     MaybeReportErrorsToGecko(errors, aRv, GetParentObject());
   } else {
     aRv.ThrowInvalidStateError(
